name: Python CI

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: "0 15 * * 0"

permissions: read-all

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: # for EnricoMi/publish-unit-test-result-action
      checks: write
      pull-requests: write # for comment_mode
      contents: read # only for private repository
      issues: read # only for private repository
    strategy:
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.2.2"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Setup python environment
        uses: ./.github/actions/python-setup
        with:
          python-version: ${{ matrix.python-version }}
          poetry-version: ${{ matrix.poetry-version }}

      - name: Lint python code by flake8
        continue-on-error: true
        run: poetry run flake8 src/ tests/ --format junit-xml --output-file report.xml

      - name: Lint python code by flake8
        continue-on-error: true
        run: poetry run flake8 src/ tests/ --format html --htmldir=flake8

      - name: Publish flake8 report to PR
        uses: EnricoMi/publish-unit-test-result-action@39ee91a16bb587a6c2b4791d4954cf5299736efd
        with:
          check_name: flake8 results
          junit_files: report.xml

      - name: Upload flake8 report to artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: flake8-report
          path: flake8/

      - name: Test python code by pytest
        continue-on-error: true
        run: poetry run pytest

      - name: Publish pytest report to PR
        uses: EnricoMi/publish-unit-test-result-action@39ee91a16bb587a6c2b4791d4954cf5299736efd
        with:
          check_name: pytest results
          junit_files: report.xml

      - name: Upload pytest coverage report to artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: pytest-cov-report
          path: htmlcov/

      - name: Upload pytest report to artifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce
        with:
          name: pytest-report
          path: report.html

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@894ff025c7b54547a9a2a1e9f228beae737ad3c2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage.xml
          flags: unittests
          verbose: true

  sast-codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ["python"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab

      - name: Initialize CodeQL
        uses: github/codeql-action/init@b2c19fb9a2a485599ccf4ed5d65527d94bc57226
        with:
          languages: ${{ matrix.language }}

      - name: Build automatically
        uses: github/codeql-action/autobuild@b2c19fb9a2a485599ccf4ed5d65527d94bc57226

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@b2c19fb9a2a485599ccf4ed5d65527d94bc57226
